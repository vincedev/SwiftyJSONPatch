[
    {
        "comment": "Toplevel scalar values OK?",
        "disabled": true,
        "doc": "foo",
        "expected": "bar",
        "patch": [
            {
                "op": "replace",
                "path": "",
                "value": "bar"
            }
        ]
    },
    {
        "doc": {
            "baz": [
                {
                    "qux": "hello"
                }
            ],
            "foo": 1
        },
        "expected": {
            "baz": [
                {
                    "qux": "hello"
                }
            ],
            "foo": [
                1,
                2,
                3,
                4
            ]
        },
        "patch": [
            {
                "op": "replace",
                "path": "/foo",
                "value": [
                    1,
                    2,
                    3,
                    4
                ]
            }
        ]
    },
    {
        "doc": {
            "baz": [
                {
                    "qux": "hello"
                }
            ],
            "foo": [
                1,
                2,
                3,
                4
            ]
        },
        "expected": {
            "baz": [
                {
                    "qux": "world"
                }
            ],
            "foo": [
                1,
                2,
                3,
                4
            ]
        },
        "patch": [
            {
                "op": "replace",
                "path": "/baz/0/qux",
                "value": "world"
            }
        ]
    },
    {
        "doc": [
            "foo"
        ],
        "expected": [
            "bar"
        ],
        "patch": [
            {
                "op": "replace",
                "path": "/0",
                "value": "bar"
            }
        ]
    },
    {
        "doc": [
            ""
        ],
        "expected": [
            0
        ],
        "patch": [
            {
                "op": "replace",
                "path": "/0",
                "value": 0
            }
        ]
    },
    {
        "doc": [
            ""
        ],
        "expected": [
            true
        ],
        "patch": [
            {
                "op": "replace",
                "path": "/0",
                "value": true
            }
        ]
    },
    {
        "doc": [
            ""
        ],
        "expected": [
            false
        ],
        "patch": [
            {
                "op": "replace",
                "path": "/0",
                "value": false
            }
        ]
    },
    {
        "doc": [
            ""
        ],
        "expected": [
            null
        ],
        "patch": [
            {
                "op": "replace",
                "path": "/0",
                "value": null
            }
        ]
    },
    {
        "comment": "value in array replace not flattened",
        "doc": [
            "foo",
            "sil"
        ],
        "expected": [
            "foo",
            [
                "bar",
                "baz"
            ]
        ],
        "patch": [
            {
                "op": "replace",
                "path": "/1",
                "value": [
                    "bar",
                    "baz"
                ]
            }
        ]
    },
    {
        "comment": "replace whole document",
        "doc": {
            "foo": "bar"
        },
        "expected": {
            "baz": "qux"
        },
        "patch": [
            {
                "op": "replace",
                "path": "",
                "value": {
                    "baz": "qux"
                }
            }
        ]
    },
    {
        "comment": "test replace with missing parent key should fail",
        "doc": {
            "bar": "baz"
        },
        "error": "replace op should fail with missing parent key",
        "patch": [
            {
                "op": "replace",
                "path": "/foo/bar",
                "value": false
            }
        ]
    },
    {
        "comment": "null value should be valid obj property to be replaced with something truthy",
        "doc": {
            "foo": null
        },
        "expected": {
            "foo": "truthy"
        },
        "patch": [
            {
                "op": "replace",
                "path": "/foo",
                "value": "truthy"
            }
        ]
    },
    {
        "comment": "null value should still be valid obj property replace other value",
        "doc": {
            "foo": "bar"
        },
        "expected": {
            "foo": null
        },
        "patch": [
            {
                "op": "replace",
                "path": "/foo",
                "value": null
            }
        ]
    },
    {
        "comment": "test replace with bad number should fail",
        "doc": [
            ""
        ],
        "error": "replace op shouldn't replace in array with bad number",
        "patch": [
            {
                "op": "replace",
                "path": "/1e0",
                "value": false
            }
        ]
    },
    {
        "comment": "missing 'value' parameter to replace",
        "doc": [
            1
        ],
        "error": "missing 'value' parameter",
        "patch": [
            {
                "op": "replace",
                "path": "/0"
            }
        ]
    },
    {
        "comment": "A.5.  Replacing a Value",
        "doc": {
            "baz": "qux",
            "foo": "bar"
        },
        "expected": {
            "baz": "boo",
            "foo": "bar"
        },
        "patch": [
            {
                "op": "replace",
                "path": "/baz",
                "value": "boo"
            }
        ]
    }
]